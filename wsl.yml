---
- hosts: all
  become: true
  become_user: root
  roles:
    - { role: "ansible", tags: ansible}
    - { role: "dev_tool_install", tags: dev_tool}
    - { role: "locale", tags: locale}
    - { role: "sudo", tags: sudo}
    - { role: "timezone", tags: timezone}
    - { role: "sshd", tags: sshd}
  tasks:
    - name: Install python3-pip packages
      apt:
        pkg: python3-pip
        state: present
        update_cache: yes
        cache_valid_time: 3600

    - name: "create {{ user_name }} .ssh/ dicrectory"
      file:
        path: "/home/{{ user_name }}/.ssh"
        state: directory
        mode: 0700
        owner: "{{ user_name }}"
        group: "{{ user_name }}"

    - name: "/etc/wsl.conf"
      template:
        src: etc/wsl.conf
        dest: "/etc/wsl.conf"
        owner: root
        group: root
        mode: 0644
        backup: true

    #######################################################################################################################
    # ホームディレクトリ関連
    #######################################################################################################################
    - name: set .bashrc
      template:
        src: home/.bashrc
        dest: "/home/{{ user_name }}/.bashrc"
        owner: "{{ user_name }}"
        group: "{{ user_name }}"
        backup: true

    - name: set .bash_alias
      template:
        src: home/.bash_aliases.j2
        dest: "/home/{{ user_name }}/.bash_aliases"
        owner: "{{ user_name }}"
        group: "{{ user_name }}"
        backup: true

    - name: set .profile
      template:
        src: home/.profile
        dest: "/home/{{ user_name }}/.profile"
        owner: "{{ user_name }}"
        group: "{{ user_name }}"
        backup: true

    - name: set .bash_profile
      template:
        src: home/.bash_profile
        dest: "/home/{{ user_name }}/.bash_profile"
        owner: "{{ user_name }}"
        group: "{{ user_name }}"
        backup: true

    - name: "set {{ user_name }} user authorized_keys"
      template:
        src: "authorized_keys.j2"
        dest: "/home/{{ user_name }}/.ssh/authorized_keys"
        owner: "{{ user_name }}"
        group: "{{ user_name }}"
        mode: 0600
        backup: true

    - name: "set {{ user_name }} user .ssh/config"
      template:
        src: "home/.ssh/config.j2"
        dest: "/home/{{ user_name }}/.ssh/config"
        owner: "{{ user_name }}"
        group: "{{ user_name }}"
        mode: 0600
        backup: true

    - name: "put /home/{{ user_name }}/service_start.sh"
      template:
        src: home/service_start.sh
        dest: "/home/{{ user_name }}/service_start.sh"
        owner: "{{ user_name }}"
        group: "{{ user_name }}"
        mode: 0755
        backup: true

    #######################################################################################################################
    # Docker関連
    #######################################################################################################################
    - name: set dockers official gpg key
      apt_key:
        url: "https://download.docker.com/linux/ubuntu/gpg"
        state: present
      register: set_key

    - name: amd64 set up the stable repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
        state: present

    - name: install docker-ce
      apt:
        pkg: docker-ce
        state: present
        update_cache: yes
        cache_valid_time: 3600

    - name: install docker-compose-plugin
      apt:
        pkg: docker-compose-plugin
        state: present
        update_cache: yes
        cache_valid_time: 3600

    - name: Add to docker group
      user:
        name: "{{ user_name }}"
        groups: docker
        append: yes

    - name: "put /etc/docker/daemon.json"
      template:
        src: etc/docker/daemon.json
        dest: /etc/docker/daemon.json
        owner: root
        group: root
        mode: 0644
        backup: true

    - name: restart docker
      service:
        name: docker
        state: restarted

    - name: enable docker
      service:
        name: docker
        enabled: yes
